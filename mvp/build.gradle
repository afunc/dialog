apply plugin: 'com.android.library'
android {
    compileSdkVersion 25
    buildToolsVersion "26.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}


////删除旧的jar的Task：deleteOldJar 名字随便写
//task deleteOldJar(type: Delete) {
//    delete 'build/outputs/mvp.jar'
//}
//
////导出新的jar，exportJar也可是别的名字
//task exportJar(type: Copy) {
//
////原地址
//    from('build/intermediates/bundles/release/')
//    from(project.zipTree('libs/butterknife.jar'))
//    destinationDir = file('build/libs')
////导出后的地址
//    into('build/outputs/')
//    include('classes.jar')
//    //重命名jar
//    rename('classes.jar', 'mvp.jar')
//}
//
//exportJar.dependsOn(deleteOldJar, build)


task jarDelete(type: Delete) {
    delete 'build/outputs/mvp.jar'
}
task jarMake(dependsOn :['compileReleaseJavaWithJavac','jarDelete'],type:Jar){

    archiveName = 'mvp.jar'
    from('build/intermediates/classes/release/')
    from(project.zipTree('libs/butterknife-7.0.1.jar'))
    destinationDir = file('build/jar')
    exclude('android/**')
    exclude('**/R$*.class')
    exclude('**/R.class')
    exclude('**/BuildConfig.class')
    include('**/**.*')
}